<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Power" xml:space="preserve">
    <value>potencia</value>
  </data>
  <data name="Precision" xml:space="preserve">
    <value>precisión</value>
  </data>
  <data name="Toughness" xml:space="preserve">
    <value>dureza</value>
  </data>
  <data name="Vitality" xml:space="preserve">
    <value>vitalidad</value>
  </data>
  <data name="Healing" xml:space="preserve">
    <value>poder de curación</value>
  </data>
  <data name="CritDamage" xml:space="preserve">
    <value>ferocidad</value>
  </data>
  <data name="ConditionDuration" xml:space="preserve">
    <value>pericia</value>
  </data>
  <data name="ConditionDamage" xml:space="preserve">
    <value>daño de condición</value>
  </data>
  <data name="BoonDuration" xml:space="preserve">
    <value>concentración</value>
  </data>
  <data name="AgonyResistance" xml:space="preserve">
    <value>resistencia a la agonía</value>
  </data>
  <data name="ItemId" xml:space="preserve">
    <value>Id. del artículo</value>
  </data>
  <data name="TraitId" xml:space="preserve">
    <value>Rasgo Id</value>
  </data>
  <data name="SkillId" xml:space="preserve">
    <value>Id. de habilidad</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>Nueva plantilla</value>
  </data>
  <data name="SortyByProfession" xml:space="preserve">
    <value>Ordenar por profesión</value>
  </data>
  <data name="SortByName" xml:space="preserve">
    <value>Ordenar por nombre</value>
  </data>
  <data name="CreateNewTemplate" xml:space="preserve">
    <value>Crear una nueva plantilla</value>
  </data>
  <data name="CreateNewTemplateName" xml:space="preserve">
    <value>Cree una nueva Plantilla llamada '{0}'.</value>
  </data>
  <data name="CopyBuildTemplateCode" xml:space="preserve">
    <value>CTRL + Clic izquierdo para copiar el código de la plantilla de construcción</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Advertencia</value>
  </data>
  <data name="ConfirmTemplateDelete" xml:space="preserve">
    <value>¿Estás seguro de borrar '{0}'?</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicar</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copia</value>
  </data>
  <data name="TemplateExistsAlready" xml:space="preserve">
    <value>Ya existe una plantilla con el nombre '{0}'.</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Acerca de</value>
  </data>
  <data name="Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Equipamiento</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Todos</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Etiquetas</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notas</value>
  </data>
  <data name="DeleteTemplate" xml:space="preserve">
    <value>Eliminar plantilla</value>
  </data>
  <data name="EquipmentCodeDisclaimer" xml:space="preserve">
    <value>Este código no es el mismo que la Plantilla de Equipo del juego. La Plantilla del juego no puede ser leída o compartida tristemente.
El propósito de este código es compartir la Plantilla de Equipo del módulo fácilmente con otros usuarios del módulo.</value>
  </data>
  <data name="Relic" xml:space="preserve">
    <value>Reliquia</value>
  </data>
  <data name="CurrentlyNotAvailable" xml:space="preserve">
    <value>Actualmente no disponible</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="ActiveLegend" xml:space="preserve">
    <value>Leyenda activa</value>
  </data>
  <data name="InactiveLegend" xml:space="preserve">
    <value>Leyenda inactiva</value>
  </data>
  <data name="ItemControlClickToCopyStat" xml:space="preserve">
    <value>CTRL + Izquierda Haz clic en el icono de la estadística para copiar el nombre de la estadística</value>
  </data>
  <data name="ItemControlClickToCopyItem" xml:space="preserve">
    <value>CTRL + Click Izquierdo para copiar el nombre del ítem</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Restablecer</value>
  </data>
  <data name="Fill" xml:space="preserve">
    <value>Rellene</value>
  </data>
  <data name="Override" xml:space="preserve">
    <value>Anular</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Restablecer todo {0}</value>
  </data>
  <data name="Stat" xml:space="preserve">
    <value>Stat</value>
  </data>
  <data name="Infusion" xml:space="preserve">
    <value>Infusión</value>
  </data>
  <data name="Infusions" xml:space="preserve">
    <value>Infusiones</value>
  </data>
  <data name="Enrichment" xml:space="preserve">
    <value>Enriquecimiento</value>
  </data>
  <data name="Rune" xml:space="preserve">
    <value>Runa</value>
  </data>
  <data name="Sigil" xml:space="preserve">
    <value>Sigil</value>
  </data>
  <data name="Runes" xml:space="preserve">
    <value>Runas</value>
  </data>
  <data name="Sigils" xml:space="preserve">
    <value>Sigils</value>
  </data>
  <data name="PvpSigil" xml:space="preserve">
    <value>PvP Sigil</value>
  </data>
  <data name="PvpSigils" xml:space="preserve">
    <value>Sigilos PvP</value>
  </data>
  <data name="ResetEntry" xml:space="preserve">
    <value>Reiniciar {0}</value>
  </data>
  <data name="FillEntry" xml:space="preserve">
    <value>Llenar {0}</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>y</value>
  </data>
  <data name="EmptyJewellerySlots" xml:space="preserve">
    <value>de todas las joyas vacías</value>
  </data>
  <data name="JewellerySlots" xml:space="preserve">
    <value>de todas las ranuras para joyas</value>
  </data>
  <data name="OverrideEntry" xml:space="preserve">
    <value>Anular {0}</value>
  </data>
  <data name="Amulet" xml:space="preserve">
    <value>Amuleto</value>
  </data>
  <data name="Armor" xml:space="preserve">
    <value>Armadura</value>
  </data>
  <data name="Armors" xml:space="preserve">
    <value>Armaduras</value>
  </data>
  <data name="ArmorSlots" xml:space="preserve">
    <value>de todas las ranuras de armadura</value>
  </data>
  <data name="EmptyArmorSlots" xml:space="preserve">
    <value>de todas las ranuras de armadura vacías</value>
  </data>
  <data name="EmptyWeaponSlots" xml:space="preserve">
    <value>de todas las ranuras de armas vacías</value>
  </data>
  <data name="Jewellery" xml:space="preserve">
    <value>Joyería</value>
  </data>
  <data name="Nourishment" xml:space="preserve">
    <value>Alimentación</value>
  </data>
  <data name="Weapon" xml:space="preserve">
    <value>Arma</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>Armas</value>
  </data>
  <data name="WeaponSlots" xml:space="preserve">
    <value>de todas las ranuras para armas</value>
  </data>
  <data name="Stats" xml:space="preserve">
    <value>Valores</value>
  </data>
  <data name="AutoSetProfession_Name" xml:space="preserve">
    <value>Filtro de ajuste automático</value>
  </data>
  <data name="AutoSetProfession_Tooltip" xml:space="preserve">
    <value>Ajustar automáticamente el filtro de profesión a la profesión actual al cambiar de profesión.</value>
  </data>
  <data name="MissingInfoFromAPI" xml:space="preserve">
    <value>No hay datos disponibles a través de la API de GW2 de ArenaNet.</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Habilidades</value>
  </data>
  <data name="HealSkills" xml:space="preserve">
    <value>Habilidades de curación</value>
  </data>
  <data name="UtilitySkills" xml:space="preserve">
    <value>Habilidades útiles</value>
  </data>
  <data name="EliteSkills" xml:space="preserve">
    <value>Habilidades de élite</value>
  </data>
  <data name="Enhancement" xml:space="preserve">
    <value>Mejora</value>
  </data>
  <data name="AquaticPets" xml:space="preserve">
    <value>Mascotas acuáticas</value>
  </data>
  <data name="TerrestrialPets" xml:space="preserve">
    <value>Mascotas terrestres</value>
  </data>
  <data name="PetId" xml:space="preserve">
    <value>Identificación de mascotas</value>
  </data>
  <data name="PowerCore" xml:space="preserve">
    <value>Núcleo de potencia</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Volver</value>
  </data>
  <data name="Ring" xml:space="preserve">
    <value>Anillo</value>
  </data>
  <data name="Accessory" xml:space="preserve">
    <value>Accesorio</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Cambie el nombre de</value>
  </data>
  <data name="EditTags" xml:space="preserve">
    <value>Editar etiquetas</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Última modificación: {0}</value>
  </data>
  <data name="GroupNotDefined" xml:space="preserve">
    <value>Grupo no definido</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Grupo</value>
  </data>
  <data name="AssetId" xml:space="preserve">
    <value>Id de activo</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Prioridad</value>
  </data>
  <data name="TagName" xml:space="preserve">
    <value>Nombre de la etiqueta</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Anchura</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Altura</value>
  </data>
  <data name="AddTag" xml:space="preserve">
    <value>Añadir etiqueta</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Plantillas</value>
  </data>
  <data name="ToggleQuickFilters" xml:space="preserve">
    <value>Ventana de filtros rápidos</value>
  </data>
  <data name="Filters" xml:space="preserve">
    <value>Filtros</value>
  </data>
  <data name="Specializations" xml:space="preserve">
    <value>Especializaciones</value>
  </data>
  <data name="AddNewTemplateWithClipboard" xml:space="preserve">
    <value>Añadir una nueva plantilla

Si tiene algún código de compilación válido en el portapapeles, la compilación se cargará desde el código.</value>
  </data>
</root>