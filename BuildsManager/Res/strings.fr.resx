<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Power" xml:space="preserve">
    <value>Puissance</value>
  </data>
  <data name="Precision" xml:space="preserve">
    <value>Précision</value>
  </data>
  <data name="Toughness" xml:space="preserve">
    <value>Robustesse</value>
  </data>
  <data name="Vitality" xml:space="preserve">
    <value>Vitalité</value>
  </data>
  <data name="Healing" xml:space="preserve">
    <value>Guérison</value>
  </data>
  <data name="CritDamage" xml:space="preserve">
    <value>Férocité</value>
  </data>
  <data name="ConditionDuration" xml:space="preserve">
    <value>Expertise</value>
  </data>
  <data name="ConditionDamage" xml:space="preserve">
    <value>Dégâts par altération</value>
  </data>
  <data name="BoonDuration" xml:space="preserve">
    <value>Concentration</value>
  </data>
  <data name="AgonyResistance" xml:space="preserve">
    <value>Résistance à l'agonie</value>
  </data>
  <data name="ItemId" xml:space="preserve">
    <value>Identité de l'objet</value>
  </data>
  <data name="TraitId" xml:space="preserve">
    <value>Trait Id</value>
  </data>
  <data name="SkillId" xml:space="preserve">
    <value>Id compétence</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>Nouveau modèle</value>
  </data>
  <data name="SortyByProfession" xml:space="preserve">
    <value>Trier par profession</value>
  </data>
  <data name="SortByName" xml:space="preserve">
    <value>Trier par nom</value>
  </data>
  <data name="CreateNewTemplate" xml:space="preserve">
    <value>Créer un nouveau modèle</value>
  </data>
  <data name="CreateNewTemplateName" xml:space="preserve">
    <value>Créer un nouveau modèle nommé "{0}".</value>
  </data>
  <data name="CopyBuildTemplateCode" xml:space="preserve">
    <value>CTRL + clic gauche pour copier le code du modèle de construction</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Avertissement</value>
  </data>
  <data name="ConfirmTemplateDelete" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer "{0}" ?</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicata</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copie</value>
  </data>
  <data name="TemplateExistsAlready" xml:space="preserve">
    <value>Il existe déjà un modèle portant le nom "{0}".</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>A propos de</value>
  </data>
  <data name="Build" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Equipment" xml:space="preserve">
    <value>Equipement</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="DeleteTemplate" xml:space="preserve">
    <value>Supprimer le modèle</value>
  </data>
  <data name="EquipmentCodeDisclaimer" xml:space="preserve">
    <value>Ce code n'est pas le même que celui de l'Equipment Template du jeu. Le modèle du jeu ne peut malheureusement pas être lu ou partagé.
Le but de ce code est de partager facilement le modèle d'équipement du module avec d'autres utilisateurs du module.</value>
  </data>
  <data name="Relic" xml:space="preserve">
    <value>Relique</value>
  </data>
  <data name="CurrentlyNotAvailable" xml:space="preserve">
    <value>Actuellement non disponible</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="ActiveLegend" xml:space="preserve">
    <value>Légende active</value>
  </data>
  <data name="InactiveLegend" xml:space="preserve">
    <value>Légende inactive</value>
  </data>
  <data name="ItemControlClickToCopyStat" xml:space="preserve">
    <value>CTRL + Gauche Cliquez sur l'icône de la stat pour copier le nom de la stat.</value>
  </data>
  <data name="ItemControlClickToCopyItem" xml:space="preserve">
    <value>CTRL + clic gauche pour copier le nom de l'élément</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Remise à zéro</value>
  </data>
  <data name="Fill" xml:space="preserve">
    <value>Remplir</value>
  </data>
  <data name="Override" xml:space="preserve">
    <value>Annulation</value>
  </data>
  <data name="ResetAll" xml:space="preserve">
    <value>Réinitialiser tout {0}</value>
  </data>
  <data name="Stat" xml:space="preserve">
    <value>Stat</value>
  </data>
  <data name="Infusion" xml:space="preserve">
    <value>Infusion</value>
  </data>
  <data name="Infusions" xml:space="preserve">
    <value>Infusions</value>
  </data>
  <data name="Enrichment" xml:space="preserve">
    <value>Enrichissement</value>
  </data>
  <data name="Rune" xml:space="preserve">
    <value>Rune</value>
  </data>
  <data name="Sigil" xml:space="preserve">
    <value>Sigil</value>
  </data>
  <data name="Runes" xml:space="preserve">
    <value>Runes</value>
  </data>
  <data name="Sigils" xml:space="preserve">
    <value>Sigils</value>
  </data>
  <data name="PvpSigil" xml:space="preserve">
    <value>Sigil JcJ</value>
  </data>
  <data name="PvpSigils" xml:space="preserve">
    <value>Sigils JcJ</value>
  </data>
  <data name="ResetEntry" xml:space="preserve">
    <value>Remise à zéro {0}</value>
  </data>
  <data name="FillEntry" xml:space="preserve">
    <value>Remplir {0}</value>
  </data>
  <data name="And" xml:space="preserve">
    <value>et</value>
  </data>
  <data name="EmptyJewellerySlots" xml:space="preserve">
    <value>de tous les emplacements de bijoux vides</value>
  </data>
  <data name="JewellerySlots" xml:space="preserve">
    <value>de toutes les machines à sous pour bijoux</value>
  </data>
  <data name="OverrideEntry" xml:space="preserve">
    <value>Remplacer {0}</value>
  </data>
  <data name="Amulet" xml:space="preserve">
    <value>Amulette</value>
  </data>
  <data name="Armor" xml:space="preserve">
    <value>Armure</value>
  </data>
  <data name="Armors" xml:space="preserve">
    <value>Armures</value>
  </data>
  <data name="ArmorSlots" xml:space="preserve">
    <value>de tous les emplacements d'armure</value>
  </data>
  <data name="EmptyArmorSlots" xml:space="preserve">
    <value>de tous les emplacements d'armure vides</value>
  </data>
  <data name="EmptyWeaponSlots" xml:space="preserve">
    <value>de tous les emplacements d'armes vides</value>
  </data>
  <data name="Jewellery" xml:space="preserve">
    <value>Bijoux</value>
  </data>
  <data name="Nourishment" xml:space="preserve">
    <value>Alimentation</value>
  </data>
  <data name="Weapon" xml:space="preserve">
    <value>Arme</value>
  </data>
  <data name="Weapons" xml:space="preserve">
    <value>Armes</value>
  </data>
  <data name="WeaponSlots" xml:space="preserve">
    <value>de tous les emplacements d'armes</value>
  </data>
  <data name="Stats" xml:space="preserve">
    <value>Valeurs</value>
  </data>
  <data name="AutoSetProfession_Name" xml:space="preserve">
    <value>Filtre à réglage automatique</value>
  </data>
  <data name="AutoSetProfession_Tooltip" xml:space="preserve">
    <value>Définir automatiquement le filtre de la profession sur la profession actuelle lors d'un changement de profession</value>
  </data>
  <data name="MissingInfoFromAPI" xml:space="preserve">
    <value>Aucune donnée n'est disponible via l'API GW2 d'ArenaNet.</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Compétences</value>
  </data>
  <data name="HealSkills" xml:space="preserve">
    <value>Compétences de guérison</value>
  </data>
  <data name="UtilitySkills" xml:space="preserve">
    <value>Compétences utilitaires</value>
  </data>
  <data name="EliteSkills" xml:space="preserve">
    <value>Compétences d'élite</value>
  </data>
  <data name="Enhancement" xml:space="preserve">
    <value>Amélioration</value>
  </data>
  <data name="AquaticPets" xml:space="preserve">
    <value>Animaux aquatiques</value>
  </data>
  <data name="TerrestrialPets" xml:space="preserve">
    <value>Animaux terrestres</value>
  </data>
  <data name="PetId" xml:space="preserve">
    <value>Pet Id</value>
  </data>
  <data name="PowerCore" xml:space="preserve">
    <value>Noyau de puissance</value>
  </data>
</root>